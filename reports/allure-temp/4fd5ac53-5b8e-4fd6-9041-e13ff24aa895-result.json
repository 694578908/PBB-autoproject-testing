{"name": "输入验证码", "status": "failed", "statusDetails": {"message": "Failed: <Failed instance>", "trace": "self = <common.request_util.RequestUtil object at 0x000001E19B605CC8>\ntitle = '输入验证码', headers = {'Content-Type': 'application/json', 'site': 'app'}\nurl = 'http://124.71.209.126:9701/applet/user/verificationLogin'\ndata = {'brand': 'iPhone', 'code': '941506', 'deviceId': '59AAC7B0-F77C-407F-988B-345CCA200D30', 'mobile': '15881086120', ...}\nmethod = 'post', max_timeout = 5, kwargs = {}, start_time = 1721281090.4552402\nrep = <Response [404]>\nrequest_data = {'brand': 'iPhone', 'code': '941506', 'deviceId': '59AAC7B0-F77C-407F-988B-345CCA200D30', 'mobile': '15881086120', ...}\nres_data = '{\"brand\": \"iPhone\", \"deviceId\": \"59AAC7B0-F77C-407F-988B-345CCA200D30\", \"model\": \"iPhone\", \"platform\": \"iOS\", \"systemName\": \"iOS 17.5.1\", \"code\": \"941506\", \"mobile\": \"15881086120\", \"parentUserId\": null}'\nend_time = 1721281090.6198008, elapsed_time = 0.16456055641174316\nelapsed_time_rounded = 0.16\n\n    def send_request_util(self, title, headers, url, data, method, max_timeout=5, **kwargs):\n        method = str(method).lower()\n        start_time = time.time()\n        rep = None\n        request_data = data\n        try:\n            if method == 'get':\n                rep = RequestUtil.session.request(method=method, url=url, params=data, headers=headers,\n                                                  timeout=max_timeout, **kwargs)\n            else:\n                res_data = json.dumps(request_data)\n                rep = RequestUtil.session.request(method=method, url=url, data=res_data, headers=headers,\n                                                  timeout=max_timeout, **kwargs)\n    \n        except requests.Timeout:\n            end_time = time.time()\n            elapsed_time = end_time - start_time\n            elapsed_time_rounded = round(elapsed_time, 2)\n            timeout_message = {'接口限制最大请求时间': max_timeout, '接口实际请求时间': elapsed_time_rounded}\n            pytest.fail(f\"接口超时: {timeout_message}\")\n            return\n    \n        end_time = time.time()\n        elapsed_time = end_time - start_time\n        elapsed_time_rounded = round(elapsed_time, 2)\n    \n        testcase_allure_attach(title, max_timeout, elapsed_time_rounded, rep.request.method, rep.url, headers, rep,\n                               request_data)\n    \n        try:\n>           assert rep.status_code == 200\nE           AssertionError\n\ncommon\\request_util.py:44: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_parametrize.TestClient object at 0x000001E19B60D348>\ncase = {'extract': {'Authorization': 'token\":\"(.*?)\"'}, 'name': '输入验证码', 'requests': {'data': {'brand': 'iPhone', 'code': '94...app'}, 'method': 'post', 'url': 'http://124.71.209.126:9701/applet/user/verificationLogin'}, 'validate': {'code': 200}}\nread_config_redis_data = ('192.168.0.223', 'server001', '6379', '3', '15881086120')\n\n    @allure.feature('客户端-用户登陆')\n    @pytest.mark.parametrize('case', YamlUtil().read_testcase_yaml('test_case.yml', 'PBB_login'))\n    def test_case_login(self, case, read_config_redis_data):\n>       res = case_request(case)\n\ntestcases\\test_parametrize.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\testcase_request_response.py:38: in case_request\n    request_result = RequestUtil().send_request_util(title, headers, url, data, method)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.request_util.RequestUtil object at 0x000001E19B605CC8>\ntitle = '输入验证码', headers = {'Content-Type': 'application/json', 'site': 'app'}\nurl = 'http://124.71.209.126:9701/applet/user/verificationLogin'\ndata = {'brand': 'iPhone', 'code': '941506', 'deviceId': '59AAC7B0-F77C-407F-988B-345CCA200D30', 'mobile': '15881086120', ...}\nmethod = 'post', max_timeout = 5, kwargs = {}, start_time = 1721281090.4552402\nrep = <Response [404]>\nrequest_data = {'brand': 'iPhone', 'code': '941506', 'deviceId': '59AAC7B0-F77C-407F-988B-345CCA200D30', 'mobile': '15881086120', ...}\nres_data = '{\"brand\": \"iPhone\", \"deviceId\": \"59AAC7B0-F77C-407F-988B-345CCA200D30\", \"model\": \"iPhone\", \"platform\": \"iOS\", \"systemName\": \"iOS 17.5.1\", \"code\": \"941506\", \"mobile\": \"15881086120\", \"parentUserId\": null}'\nend_time = 1721281090.6198008, elapsed_time = 0.16456055641174316\nelapsed_time_rounded = 0.16\n\n    def send_request_util(self, title, headers, url, data, method, max_timeout=5, **kwargs):\n        method = str(method).lower()\n        start_time = time.time()\n        rep = None\n        request_data = data\n        try:\n            if method == 'get':\n                rep = RequestUtil.session.request(method=method, url=url, params=data, headers=headers,\n                                                  timeout=max_timeout, **kwargs)\n            else:\n                res_data = json.dumps(request_data)\n                rep = RequestUtil.session.request(method=method, url=url, data=res_data, headers=headers,\n                                                  timeout=max_timeout, **kwargs)\n    \n        except requests.Timeout:\n            end_time = time.time()\n            elapsed_time = end_time - start_time\n            elapsed_time_rounded = round(elapsed_time, 2)\n            timeout_message = {'接口限制最大请求时间': max_timeout, '接口实际请求时间': elapsed_time_rounded}\n            pytest.fail(f\"接口超时: {timeout_message}\")\n            return\n    \n        end_time = time.time()\n        elapsed_time = end_time - start_time\n        elapsed_time_rounded = round(elapsed_time, 2)\n    \n        testcase_allure_attach(title, max_timeout, elapsed_time_rounded, rep.request.method, rep.url, headers, rep,\n                               request_data)\n    \n        try:\n            assert rep.status_code == 200\n            allure_requesttime_success(rep.status_code)\n        except AssertionError as e:\n    \n>           pytest.fail(allure_requesttime_fail(e, rep.status_code))\nE           Failed: <Failed instance>\n\ncommon\\request_util.py:48: Failed"}, "attachments": [{"name": "接口响应时间", "source": "1d325924-cb43-41b9-a703-b0da60a5f0d1-attachment.json", "type": "application/json"}, {"name": "请求地址", "source": "8ce67747-ea29-475f-9cea-1bbcaef79416-attachment.json", "type": "application/json"}, {"name": "请求头", "source": "b62cf5ab-a28a-412c-9570-37ad64d5ab3e-attachment.json", "type": "application/json"}, {"name": "请求参数", "source": "05f567ff-f8dc-4800-bd26-d17dbdbd419b-attachment.json", "type": "application/json"}, {"name": "接口响应", "source": "326c4f72-ef9f-4c5c-a1ad-b672c3efa365-attachment.txt", "type": "text/plain"}, {"name": "接口响应失败code:404", "source": "8f64fdf5-1a31-4db5-9d33-6411a0c2cb5a-attachment.attach"}, {"name": "log", "source": "3924348f-0ae5-4e50-a82e-8979dbde57be-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'name': '输入验证码', 'requests': {'method': 'post', 'headers': {'Content-Type': 'application/json', 'site': 'app'}, 'url': '${login_url}/applet/user/verificationLogin', 'data': {'brand': 'iPhone', 'deviceId': '59AAC7B0-F77C-407F-988B-345CCA200D30', 'model': 'iPhone', 'platform': 'iOS', 'systemName': 'iOS 17.5.1', 'code': '${code}', 'mobile': '${mobile}', 'parentUserId': None}}, 'extract': {'Authorization': 'token\":\"(.*?)\"'}, 'validate': {'code': 200}}"}], "start": 1721281090454, "stop": 1721281090624, "uuid": "0b755203-ec64-4411-8870-911d34b8f25e", "historyId": "39bcb7e8f69044a92262485cfbd76599", "testCaseId": "26c4811ff5bb85edd72f09b277d8d659", "fullName": "testcases.test_parametrize.TestClient#test_case_login", "labels": [{"name": "story", "value": "输入验证码接口"}, {"name": "epic", "value": "聘播播-客户端自动化测试"}, {"name": "feature", "value": "客户端-用户登陆"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_parametrize"}, {"name": "subSuite", "value": "TestClient"}, {"name": "host", "value": "CB-20240115XJAK"}, {"name": "thread", "value": "98252-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_parametrize"}]}